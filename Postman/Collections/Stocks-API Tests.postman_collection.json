{
	"info": {
		"_postman_id": "018b77d9-2d65-4864-899d-ed2d6e3b4e10",
		"name": "Stocks-API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23160130"
	},
	"item": [
		{
			"name": "Search",
			"item": [
				{
					"name": "GET Search Stocks",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=BB",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"search",
										"stocks"
									],
									"query": [
										{
											"key": "fragment",
											"value": "BB"
										},
										{
											"key": "count",
											"value": "12",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=BB",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"search",
												"stocks"
											],
											"query": [
												{
													"key": "fragment",
													"value": "BB"
												},
												{
													"key": "count",
													"value": "12",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 21 Oct 2022 16:24:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost:3000"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"CurrentPrice\": 27.09,\n        \"CurrentDelta\": 0.67,\n        \"TickerSymbol\": \"ABB\",\n        \"Name\": \"ABB Ltd. - ADR\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 145.99,\n        \"CurrentDelta\": 3.06,\n        \"TickerSymbol\": \"ABBV\",\n        \"Name\": \"Abbvie Inc\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 0.09,\n        \"CurrentDelta\": 0,\n        \"TickerSymbol\": \"AIBBR\",\n        \"Name\": \"AIB Acquisition Corp - Tradeable Rights - Dec 2026\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNAS\"\n    },\n    {\n        \"CurrentPrice\": 10.11,\n        \"CurrentDelta\": 0,\n        \"TickerSymbol\": \"AIBBU\",\n        \"Name\": \"AIB Acquisition Corp - Units (1 Ord Share Class A & 1 Right)\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNAS\"\n    },\n    {\n        \"CurrentPrice\": 4.38,\n        \"CurrentDelta\": 0.04,\n        \"TickerSymbol\": \"BB\",\n        \"Name\": \"BlackBerry Ltd\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 1.24,\n        \"CurrentDelta\": 0,\n        \"TickerSymbol\": \"BBAI\",\n        \"Name\": \"BigBear.ai Holdings Inc\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 0.06,\n        \"CurrentDelta\": 0,\n        \"TickerSymbol\": \"BBAI+\",\n        \"Name\": \"BigBear.ai Holdings Inc - Warrants (08/02/2026)\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 3.08,\n        \"CurrentDelta\": 0.0872,\n        \"TickerSymbol\": \"BBAR\",\n        \"Name\": \"BBVA Argentina - ADR\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 41.91,\n        \"CurrentDelta\": 0,\n        \"TickerSymbol\": \"BBAX\",\n        \"Name\": \"J.P. Morgan Exchange-Traded Fund Trust - JPMorgan BetaBuilders Developed Asia Pacific ex-Japan ETF\",\n        \"Currency\": \"USD\",\n        \"Market\": \"BATS\"\n    },\n    {\n        \"CurrentPrice\": 4.61,\n        \"CurrentDelta\": -0.44,\n        \"TickerSymbol\": \"BBBY\",\n        \"Name\": \"Bed, Bath & Beyond Inc.\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNAS\"\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Specify Count",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=BB&count=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"search",
										"stocks"
									],
									"query": [
										{
											"key": "fragment",
											"value": "BB"
										},
										{
											"key": "count",
											"value": "2"
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Specify Count",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=BB&count=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"search",
												"stocks"
											],
											"query": [
												{
													"key": "fragment",
													"value": "BB"
												},
												{
													"key": "count",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 21 Oct 2022 16:25:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost:3000"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"CurrentPrice\": 27.125,\n        \"CurrentDelta\": 0.705,\n        \"TickerSymbol\": \"ABB\",\n        \"Name\": \"ABB Ltd. - ADR\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    },\n    {\n        \"CurrentPrice\": 146.17,\n        \"CurrentDelta\": 3.24,\n        \"TickerSymbol\": \"ABBV\",\n        \"Name\": \"Abbvie Inc\",\n        \"Currency\": \"USD\",\n        \"Market\": \"XNYS\"\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Non-existent fragment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=1123442125",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"search",
										"stocks"
									],
									"query": [
										{
											"key": "fragment",
											"value": "1123442125"
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Non-existent fragment",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/search/stocks?fragment=1123442125",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"search",
												"stocks"
											],
											"query": [
												{
													"key": "fragment",
													"value": "1123442125"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 21 Oct 2022 16:02:30 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost:3000"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						},
						{
							"name": "[400] Omitted fragment",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);\r",
											"pm.collectionVariables.set(\"ExpectedErrorCode\", \"InvalidProperty\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/search/stocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"search",
										"stocks"
									],
									"query": [
										{
											"key": "fragment",
											"value": "<string>",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Omitted fragment",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/search/stocks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"search",
												"stocks"
											],
											"query": [
												{
													"key": "fragment",
													"value": "<string>",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 21 Oct 2022 16:01:12 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost:3000"
										}
									],
									"cookie": [],
									"body": "{\n    \"Errors\": [\n        {\n            \"Code\": \"InvalidProperty\",\n            \"Message\": \"A value for the 'Fragment' parameter or property was not provided.\"\n        }\n    ],\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"detail\": null,\n    \"instance\": null,\n    \"traceId\": \"0HMLJFLE2715G:00000002\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Reference",
			"item": [
				{
					"name": "GET Ticker Symbols",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/reference/data/tickersymbols",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"reference",
										"data",
										"tickersymbols"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET Stock Information",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/reference/data/stockinformation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"reference",
										"data",
										"stockinformation"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Prices",
			"item": [
				{
					"name": "GET Historical Stock Prices",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/historical?tickerSymbol={{tickerSymbol}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"historical"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "{{tickerSymbol}}",
											"description": "(Required) A market instrument ticker symbol."
										},
										{
											"key": "range",
											"value": "OneMonth",
											"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
											"disabled": true
										}
									]
								},
								"description": "Add more description here!"
							},
							"response": [
								{
									"name": "[200] Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iexcloud/historicalstockprices?tickerSymbol={{tickerSymbol}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iexcloud",
												"historicalstockprices"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "{{tickerSymbol}}",
													"description": "(Required) A market instrument ticker symbol."
												},
												{
													"key": "range",
													"value": "OneMonth",
													"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Sep 2022 19:43:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"date\": \"2022-08-31T00:00:00\",\n        \"open\": 133.79,\n        \"close\": 132.27,\n        \"high\": 134.17,\n        \"low\": 131.3,\n        \"volume\": 8701117\n    },\n    {\n        \"date\": \"2022-09-01T00:00:00\",\n        \"open\": 129.98,\n        \"close\": 129.92,\n        \"high\": 130.13,\n        \"low\": 126.083,\n        \"volume\": 8716270\n    },\n    {\n        \"date\": \"2022-09-02T00:00:00\",\n        \"open\": 131.64,\n        \"close\": 128.48,\n        \"high\": 132.67,\n        \"low\": 127.56,\n        \"volume\": 6121409\n    }\n]"
								}
							]
						},
						{
							"name": "[200] Specify Range",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/historical?tickerSymbol={{tickerSymbol}}&range=OneMonth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"historical"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "{{tickerSymbol}}",
											"description": "(Required) A market instrument ticker symbol."
										},
										{
											"key": "range",
											"value": "OneMonth",
											"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\"."
										}
									]
								},
								"description": "Add more description here!"
							},
							"response": [
								{
									"name": "[200] Specify Range",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iexcloud/historicalstockprices?tickerSymbol={{tickerSymbol}}&range=OneMonth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iexcloud",
												"historicalstockprices"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "{{tickerSymbol}}",
													"description": "(Required) A market instrument ticker symbol."
												},
												{
													"key": "range",
													"value": "OneMonth",
													"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\"."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Sep 2022 19:43:31 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"date\": \"2022-08-05T00:00:00\",\n        \"open\": 148.57,\n        \"close\": 150.21,\n        \"high\": 151.283,\n        \"low\": 147.67,\n        \"volume\": 5041315\n    },\n    {\n        \"date\": \"2022-08-08T00:00:00\",\n        \"open\": 149.81,\n        \"close\": 147.81,\n        \"high\": 151.19,\n        \"low\": 146.55,\n        \"volume\": 5564307\n    },\n    {\n        \"date\": \"2022-08-09T00:00:00\",\n        \"open\": 145.59,\n        \"close\": 142.51,\n        \"high\": 146.5,\n        \"low\": 141.31,\n        \"volume\": 6770803\n    },\n    {\n        \"date\": \"2022-08-10T00:00:00\",\n        \"open\": 145.85,\n        \"close\": 146.99,\n        \"high\": 147.18,\n        \"low\": 143.69,\n        \"volume\": 6839997\n    },\n    {\n        \"date\": \"2022-08-11T00:00:00\",\n        \"open\": 148.31,\n        \"close\": 147.83,\n        \"high\": 151.64,\n        \"low\": 147.02,\n        \"volume\": 6243214\n    },\n    {\n        \"date\": \"2022-08-12T00:00:00\",\n        \"open\": 148,\n        \"close\": 151.29,\n        \"high\": 151.47,\n        \"low\": 147.18,\n        \"volume\": 4967492\n    },\n    {\n        \"date\": \"2022-08-15T00:00:00\",\n        \"open\": 150.32,\n        \"close\": 152.13,\n        \"high\": 152.7,\n        \"low\": 148.395,\n        \"volume\": 4502857\n    },\n    {\n        \"date\": \"2022-08-16T00:00:00\",\n        \"open\": 151.45,\n        \"close\": 150.03,\n        \"high\": 152.49,\n        \"low\": 148.85,\n        \"volume\": 5270822\n    },\n    {\n        \"date\": \"2022-08-17T00:00:00\",\n        \"open\": 148.23,\n        \"close\": 148.53,\n        \"high\": 149.63,\n        \"low\": 146.36,\n        \"volume\": 5169594\n    },\n    {\n        \"date\": \"2022-08-18T00:00:00\",\n        \"open\": 148.07,\n        \"close\": 151.38,\n        \"high\": 152.91,\n        \"low\": 147.76,\n        \"volume\": 7808233\n    },\n    {\n        \"date\": \"2022-08-19T00:00:00\",\n        \"open\": 149.29,\n        \"close\": 147.6,\n        \"high\": 150.38,\n        \"low\": 146.9,\n        \"volume\": 5400320\n    },\n    {\n        \"date\": \"2022-08-22T00:00:00\",\n        \"open\": 145.3,\n        \"close\": 141.61,\n        \"high\": 145.811,\n        \"low\": 141.1,\n        \"volume\": 6736816\n    },\n    {\n        \"date\": \"2022-08-23T00:00:00\",\n        \"open\": 142.09,\n        \"close\": 140.72,\n        \"high\": 143.61,\n        \"low\": 140.56,\n        \"volume\": 4499332\n    },\n    {\n        \"date\": \"2022-08-24T00:00:00\",\n        \"open\": 140.25,\n        \"close\": 141.31,\n        \"high\": 141.71,\n        \"low\": 138.61,\n        \"volume\": 5113128\n    },\n    {\n        \"date\": \"2022-08-25T00:00:00\",\n        \"open\": 142.34,\n        \"close\": 146.25,\n        \"high\": 147,\n        \"low\": 142.02,\n        \"volume\": 5618848\n    },\n    {\n        \"date\": \"2022-08-26T00:00:00\",\n        \"open\": 146.16,\n        \"close\": 138.38,\n        \"high\": 147.36,\n        \"low\": 138.05,\n        \"volume\": 7918641\n    },\n    {\n        \"date\": \"2022-08-29T00:00:00\",\n        \"open\": 137.81,\n        \"close\": 137.08,\n        \"high\": 139.13,\n        \"low\": 136.11,\n        \"volume\": 6852263\n    },\n    {\n        \"date\": \"2022-08-30T00:00:00\",\n        \"open\": 137.8,\n        \"close\": 134.41,\n        \"high\": 138.3,\n        \"low\": 132.94,\n        \"volume\": 6147355\n    },\n    {\n        \"date\": \"2022-08-31T00:00:00\",\n        \"open\": 133.79,\n        \"close\": 132.27,\n        \"high\": 134.17,\n        \"low\": 131.3,\n        \"volume\": 8701117\n    },\n    {\n        \"date\": \"2022-09-01T00:00:00\",\n        \"open\": 129.98,\n        \"close\": 129.92,\n        \"high\": 130.13,\n        \"low\": 126.083,\n        \"volume\": 8716270\n    },\n    {\n        \"date\": \"2022-09-02T00:00:00\",\n        \"open\": 131.64,\n        \"close\": 128.48,\n        \"high\": 132.67,\n        \"low\": 127.56,\n        \"volume\": 6121409\n    }\n]"
								}
							]
						},
						{
							"name": "[400] Omitted tickerSymbol",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);\r",
											"pm.collectionVariables.set(\"ExpectedErrorCode\", \"InvalidProperty\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/historical",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"historical"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "<string>",
											"description": "(Required) A market instrument ticker symbol.",
											"disabled": true
										},
										{
											"key": "range",
											"value": "<string>",
											"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
											"disabled": true
										}
									]
								},
								"description": "Add more description here!"
							},
							"response": [
								{
									"name": "[400] Omitted tickerSymbol Default Response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/iexcloud/historicalstockprices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"iexcloud",
												"historicalstockprices"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "<string>",
													"description": "(Required) A market instrument ticker symbol.",
													"disabled": true
												},
												{
													"key": "range",
													"value": "<string>",
													"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 05 Sep 2022 19:44:16 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"|c3fdc719-4b3d98473f09beef.\",\n    \"errors\": {\n        \"tickerSymbol\": [\n            \"A value for the 'tickerSymbol' parameter or property was not provided.\"\n        ]\n    }\n}"
								},
								{
									"name": "[400] Omitted tickerSymbol",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/prices/historical",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"prices",
												"historical"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "<string>",
													"description": "(Required) A market instrument ticker symbol.",
													"disabled": true
												},
												{
													"key": "range",
													"value": "<string>",
													"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 17 Oct 2022 19:46:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"InvalidProperty\",\n            \"message\": \"A value for the 'tickerSymbol' parameter or property was not provided.\"\n        }\n    ],\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"detail\": null,\n    \"instance\": null,\n    \"traceId\": \"0HMLGF19FLKIS:00000001\"\n}"
								}
							]
						},
						{
							"name": "[400] Invalid tickerSymbol",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/historical?tickerSymbol=XXX",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"historical"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "XXX",
											"description": "(Required) A market instrument ticker symbol."
										},
										{
											"key": "range",
											"value": "<string>",
											"description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
											"disabled": true
										}
									]
								},
								"description": "Add more description here!"
							},
							"response": []
						}
					]
				},
				{
					"name": "GET Stock Quote",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/quote?tickerSymbol={{tickerSymbol}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"quote"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "{{tickerSymbol}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/prices/quote?tickerSymbol={{tickerSymbol}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"prices",
												"quote"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "{{tickerSymbol}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Oct 2022 22:46:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"CurrentPrice\": 111.19,\n    \"CurrentDelta\": -0.4,\n    \"TickerSymbol\": \"QCOM\",\n    \"Name\": \"Qualcomm, Inc.\",\n    \"Currency\": \"USD\",\n    \"Market\": \"XNAS\"\n}"
								}
							]
						},
						{
							"name": "[400] Omitted tickerSymbol",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);\r",
											"pm.collectionVariables.set(\"ExpectedErrorCode\", \"InvalidProperty\");\r",
											"pm.collectionVariables.set(\"ExpectedErrorMessageSubstring\", \"parameter or property was not provided\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/quote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"quote"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "<string>",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Omitted tickerSymbol",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/prices/quote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"prices",
												"quote"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "<string>",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Oct 2022 22:59:47 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Errors\": [\n        {\n            \"Code\": \"InvalidProperty\",\n            \"Message\": \"A value for the 'TickerSymbol' parameter or property was not provided.\"\n        }\n    ],\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"detail\": null,\n    \"instance\": null,\n    \"traceId\": \"0HMLHBFBT0FD8:00000005\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "GET Stock Advanced Quote",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/advancedquote?tickerSymbol={{tickerSymbol}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"advancedquote"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "{{tickerSymbol}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/prices/advancedquote?tickerSymbol={{tickerSymbol}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"prices",
												"advancedquote"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "{{tickerSymbol}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 21 Oct 2022 20:01:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost:3000"
										}
									],
									"cookie": [],
									"body": "{\n    \"CurrentPrice\": 115.75,\n    \"CurrentDelta\": 3.77,\n    \"OpenPrice\": 111.825,\n    \"ClosePrice\": 115.75,\n    \"HighPrice\": null,\n    \"LowPrice\": null,\n    \"Volume\": 344322,\n    \"AverageVolume\": 8301367,\n    \"PricePerEarningsRatio\": 10.26,\n    \"MarketCap\": 129987250000,\n    \"FiftyTwoWeekHigh\": 190.7,\n    \"FiftyTwoWeekLow\": 104.66,\n    \"Yield\": null,\n    \"Beta\": null,\n    \"EarningsPerShare\": null,\n    \"TickerSymbol\": \"QCOM\",\n    \"Name\": \"Qualcomm, Inc.\",\n    \"Currency\": \"USD\",\n    \"Market\": \"XNAS\"\n}"
								}
							]
						},
						{
							"name": "[400] Omitted tickerSymbol",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);\r",
											"pm.collectionVariables.set(\"ExpectedErrorCode\", \"InvalidProperty\");\r",
											"pm.collectionVariables.set(\"ExpectedErrorMessageSubstring\", \"parameter or property was not provided\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/prices/advancedquote",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"prices",
										"advancedquote"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "<string>",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Omitted tickerSymbol",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/prices/advancedquote",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"prices",
												"advancedquote"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "<string>",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Oct 2022 23:00:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Errors\": [\n        {\n            \"Code\": \"InvalidProperty\",\n            \"Message\": \"A value for the 'TickerSymbol' parameter or property was not provided.\"\n        }\n    ],\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"detail\": null,\n    \"instance\": null,\n    \"traceId\": \"0HMLHBFBT0FD8:00000006\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "GET OpenAPI Specification",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/openapi/v1/openapi.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"openapi",
								"v1",
								"openapi.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Redoc",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/redoc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redoc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Status",
			"item": [
				{
					"name": "GET Market Status",
					"item": [
						{
							"name": "[200] Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 200);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/status/markets?tickerSymbol={{tickerSymbol}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"status",
										"markets"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "{{tickerSymbol}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "[200] Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/status/markets?tickerSymbol={{tickerSymbol}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"status",
												"markets"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "{{tickerSymbol}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Oct 2022 21:09:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Name\": \"Nasdaq All Markets\",\n    \"Status\": \"Closed\"\n}"
								}
							]
						},
						{
							"name": "[400] Omitted tickerSymbol",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ExpectedStatusCode\", 400);\r",
											"pm.collectionVariables.set(\"ExpectedErrorCode\", \"InvalidProperty\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/gateway/status/markets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"gateway",
										"status",
										"markets"
									],
									"query": [
										{
											"key": "tickerSymbol",
											"value": "<string>",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "[400] Omitted tickerSymbol",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/gateway/status/markets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"gateway",
												"status",
												"markets"
											],
											"query": [
												{
													"key": "tickerSymbol",
													"value": "<string>",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 18 Oct 2022 23:03:37 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/problem+json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Errors\": [\n        {\n            \"Code\": \"InvalidProperty\",\n            \"Message\": \"A value for the 'TickerSymbol' parameter or property was not provided.\"\n        }\n    ],\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"detail\": null,\n    \"instance\": null,\n    \"traceId\": \"0HMLHBFBT0FD8:0000000F\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Collection Pre-Request Script | START\");",
					"",
					"// SET ENVIRONMENT VARIABLES",
					"var moment = require('moment'); // i.e. this moment",
					"pm.environment.set(\"todaysDate\", moment().format((\"YYYY-MM-DD\")));",
					"pm.environment.set(\"weekToDate\", moment().add(7, 'days').format((\"YYYY-MM-DD\")));",
					"pm.environment.set(\"monthToDate\", moment().add(1, 'months').format((\"YYYY-MM-DD\")));",
					"pm.environment.set(\"yearToDate\", moment().add(1, 'years').format((\"YYYY-MM-DD\")));",
					"",
					"// SET COLLECTION VARIABLES",
					"pm.collectionVariables.set(\"ExpectedStatusCode\", \"<not-specified>\");",
					"pm.collectionVariables.set(\"ExpectedErrorCode\", \"<not-specified>\");",
					"pm.collectionVariables.set(\"ExpectedErrorMessageSubstring\", \"<not-specified>\");",
					"",
					"//SET DEFAULT HEADERS",
					"const headerNames = [\"Origin\"];",
					"",
					"headerNames.forEach(headerName => {",
					"    var headerEnvironmentValue = pm.environment.get(headerName);",
					"    pm.request.headers.upsert({key: headerName, value: headerEnvironmentValue});",
					"    console.log(`Set ${headerName} : ${headerEnvironmentValue}`);",
					"});",
					"",
					"console.log(\"Collection Pre-Request Script | END\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Collection Tests Script | START\");",
					"",
					"// 1 - Check status code is not 500",
					"pm.test(\"Status code is not 500\", () => {",
					"    pm.response.to.not.have.status(500);",
					"});",
					"",
					"// 2 - Check status code matches expected",
					"var expectedStatusCode = pm.collectionVariables.get(\"ExpectedStatusCode\");",
					"pm.test(`Status code is \"${expectedStatusCode}\"`, () => {",
					"    pm.expect(pm.response.code).to.eql(expectedStatusCode);",
					"});",
					"",
					"// 3 - Check response body is not empty",
					"if (pm.response.code != 204 && pm.response.code != 500)",
					"{",
					"    pm.test(\"Response is not empty\", () => {",
					"        pm.expect(pm.response).to.not.be.empty;",
					"    });",
					"}",
					"",
					"// 4 - Check error response body contains error information and error code matches expected.",
					"// Optionally check the error message contains a specified substring.",
					"if (pm.response.code != 200 && pm.response.code != 204)",
					"{",
					"    pm.test(\"Error response contains error information\", () => {",
					"        pm.expect(pm.response.json().Errors).to.not.be.null;",
					"        pm.expect(pm.response.json().Errors).to.not.be.empty;",
					"    });",
					"",
					"    var expectedErrorCode = pm.collectionVariables.get(\"ExpectedErrorCode\");",
					"    pm.test(`Error response code is \"${expectedErrorCode}\"`, () => {",
					"        pm.expect(pm.response.json().Errors[0].Code).to.eql(expectedErrorCode)",
					"    });",
					"",
					"    var expectedErrorMessageSubstring = pm.collectionVariables.get(\"ExpectedErrorMessageSubstring\");",
					"    if (expectedErrorMessageSubstring != \"<not-specified>\")",
					"    {",
					"        pm.test(`Error response message contains \"${expectedErrorMessageSubstring}\"`, () => {",
					"            pm.expect(pm.response.json().Errors[0].Message).to.contain(expectedErrorMessageSubstring)",
					"        });",
					"    }",
					"}",
					"",
					"console.log(\"Collection Tests Script | END\");"
				]
			}
		}
	],
	"variable": [
		{
			"key": "ExpectedStatusCode",
			"value": "<not-specified>"
		},
		{
			"key": "ExpectedErrorCode",
			"value": "<not-specified>"
		},
		{
			"key": "ExpectedErrorMessageSubstring",
			"value": "<not-specified>"
		}
	]
}