{
  "x-generator": "NSwag v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v11.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Stocks API",
    "description": "\r\n# Introduction\r\nWelcome to the Stocks API.\r\n\r\n# HTTP Responses\r\nA HTTP response indicates the result of a request to the API.\r\nMore information can be found [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).\r\n\r\n## Success\r\nSuccessful requests to the API will return responses with status codes in the ```200``` range.\r\n\r\n| Code | Name | Description |\r\n| ----------- | ----------- | ----------- |\r\n| 200 | OK | The request succeeded and content is returned. |\r\n| 204 | No Content | The request succeeded and no content is returned. |\r\n\r\n## Client Errors\r\nUnsuccessful requests to the API due to client errors will return responses with status codes in the ```400``` range.\r\n\r\n| Code | Name | Description |\r\n| ----------- | ----------- | ----------- |\r\n| 400 | Bad Request | The server cannot or will not process the request due to something that is perceived to be a client error. |\r\n| 401 | Unauthorized | Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response. |\r\n| 403 | Forbidden | The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server. |\r\n| 404 | Not Found | The server can not find the requested resource. |\r\n| 422 | Unprocessable Entity | The request was well-formed but was unable to be followed due to semantic errors. |\r\n\r\n## Server Errors\r\nUnsuccessful requests to the API due to server errors will return responses with status codes in the ```500``` range.\r\n\r\n| Code | Name | Description |\r\n| ----------- | ----------- | ----------- |\r\n| 500 | Internal Server Error | The server has encountered a situation it does not know how to handle and cannot return a meaningful error response. |\r\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:53672"
    }
  ],
  "paths": {
    "/api/gateway/status/markets": {
      "get": {
        "tags": [
          "Markets"
        ],
        "summary": "Returns market status based on the search query.",
        "description": "Add more description here!",
        "operationId": "MarketStatus_Get",
        "parameters": [
          {
            "name": "TickerSymbol",
            "in": "query",
            "required": true,
            "description": "Instrument's ticker symbol.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketStatusPreview"
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/search/stocks": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Returns stock previews based on the search query.",
        "description": "Add more description here!",
        "operationId": "StockSearch_Get",
        "parameters": [
          {
            "name": "Fragment",
            "in": "query",
            "required": true,
            "description": "The fragment used for the search.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "Count",
            "in": "query",
            "description": "The maximum number of results returned.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockPreview"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/reference/data/stockinformation": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Returns basic information for all stocks on the platform.",
        "description": "Add more description here!",
        "operationId": "StockInformation_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockInformation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/reference/data/tickersymbols": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "Returns a list of all ticker symbols on the platform.",
        "description": "Add more description here!",
        "operationId": "TickerSymbols_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/prices/advancedquote": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Returns an advanced stock quote of the specified market instrument.",
        "description": "Add more description here!",
        "operationId": "StockAdvancedQuote_Get",
        "parameters": [
          {
            "name": "TickerSymbol",
            "in": "query",
            "required": true,
            "description": "Instrument's ticker symbol.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockAdvancedQuote"
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/prices/quote": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Returns a stock quote of the specified market instrument.",
        "description": "Add more description here!",
        "operationId": "StockQuote_Get",
        "parameters": [
          {
            "name": "TickerSymbol",
            "in": "query",
            "required": true,
            "description": "Instrument's ticker symbol.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockQuote"
                }
              }
            }
          }
        }
      }
    },
    "/api/gateway/prices/historical": {
      "get": {
        "tags": [
          "Historical"
        ],
        "summary": "Returns historical prices of the specified market instrument.",
        "description": "Add more description here!",
        "operationId": "HistoricalStockPrices_Get",
        "parameters": [
          {
            "name": "tickerSymbol",
            "in": "query",
            "required": true,
            "description": "A market instrument's ticker symbol.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "range",
            "in": "query",
            "description": "The period of time for historical prices to be returned.\nThe default is \"FiveDay\".",
            "schema": {
              "$ref": "#/components/schemas/HistoricalStockPricesRange"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DayStockPrice"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MarketStatusPreview": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of the market."
          },
          "Status": {
            "description": "The market's current status.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MarketStatus"
              }
            ]
          }
        }
      },
      "MarketStatus": {
        "type": "string",
        "description": "Status of whether the market is open for trading or not.",
        "x-enumNames": [
          "Open",
          "Closed"
        ],
        "enum": [
          "Open",
          "Closed"
        ]
      },
      "StockPreview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StockQuote"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "StockQuote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StockInformation"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CurrentPrice": {
                "type": "number",
                "description": "Instrument's current price.",
                "format": "decimal"
              },
              "CurrentDelta": {
                "type": "number",
                "description": "Instrument's current delta.",
                "format": "decimal"
              }
            }
          }
        ]
      },
      "StockInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "TickerSymbol": {
            "type": "string",
            "description": "Instrument's ticker symbol."
          },
          "Name": {
            "type": "string",
            "description": "Instrument's name."
          },
          "Currency": {
            "description": "Instrument's traded currency.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ]
          },
          "Market": {
            "type": "string",
            "description": "Market instrument is traded on."
          }
        }
      },
      "CurrencyCode": {
        "type": "string",
        "description": "A currency's ISO-4217 standard code",
        "x-enumNames": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UZS",
          "VED",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XSU",
          "XUA",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ],
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UZS",
          "VED",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "XSU",
          "XUA",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ]
      },
      "StockAdvancedQuote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StockInformation"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CurrentPrice": {
                "type": "number",
                "description": "Instrument's current price.",
                "format": "decimal"
              },
              "CurrentDelta": {
                "type": "number",
                "description": "Instrument's current delta.",
                "format": "decimal"
              },
              "OpenPrice": {
                "type": "number",
                "description": "Instrument's price on market open.",
                "format": "decimal"
              },
              "ClosePrice": {
                "type": "number",
                "description": "Instrument's price on market close.",
                "format": "decimal"
              },
              "HighPrice": {
                "type": "number",
                "description": "Instrument's highest price.",
                "format": "decimal"
              },
              "LowPrice": {
                "type": "number",
                "description": "Instrument's lowest price.",
                "format": "decimal"
              },
              "Volume": {
                "type": "number",
                "description": "Instrument's traded volume.",
                "format": "decimal"
              },
              "AverageVolume": {
                "type": "number",
                "description": "Instrument's average traded volume.",
                "format": "decimal"
              },
              "PricePerEarningsRatio": {
                "type": "number",
                "description": "Instrument's price per earnings ratio.",
                "format": "decimal"
              },
              "MarketCap": {
                "type": "number",
                "description": "Instrument's market cap.",
                "format": "decimal"
              },
              "FiftyTwoWeekHigh": {
                "type": "number",
                "description": "Instrument's highest value in the past 52 weeks.",
                "format": "decimal"
              },
              "FiftyTwoWeekLow": {
                "type": "number",
                "description": "Instrument's lowest value in the past 52 weeks.",
                "format": "decimal"
              },
              "Yield": {
                "type": "number",
                "description": "Instrument's yield.",
                "format": "decimal"
              },
              "Beta": {
                "type": "number",
                "description": "Instrument's beta.",
                "format": "decimal"
              },
              "EarningsPerShare": {
                "type": "number",
                "description": "Instrument's earnings per share.",
                "format": "decimal"
              }
            }
          }
        ]
      },
      "DayStockPrice": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Date": {
            "type": "string",
            "description": "The date of the day's stock price information.",
            "format": "date-time"
          },
          "Open": {
            "type": "number",
            "description": "The stock price on market open.",
            "format": "decimal"
          },
          "Close": {
            "type": "number",
            "description": "The stock price on market close.",
            "format": "decimal"
          },
          "High": {
            "type": "number",
            "description": "The highest price of the stock during the day.",
            "format": "decimal"
          },
          "Low": {
            "type": "number",
            "description": "The lowest price of the stock during the day.",
            "format": "decimal"
          },
          "Volume": {
            "type": "number",
            "description": "The volume of stock traded during the day.",
            "format": "decimal"
          }
        }
      },
      "HistoricalStockPricesRange": {
        "type": "string",
        "description": "Range of time for which prices will be returned.",
        "x-enumNames": [
          "FiveDay",
          "OneMonth",
          "ThreeMonths",
          "OneYear"
        ],
        "enum": [
          "FiveDay",
          "OneMonth",
          "ThreeMonths",
          "OneYear"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Status",
      "tags": [
        "Markets"
      ]
    },
    {
      "name": "Search",
      "tags": [
        "Stocks"
      ]
    },
    {
      "name": "Reference",
      "tags": [
        "Data"
      ]
    },
    {
      "name": "Prices",
      "tags": [
        "Quote",
        "Historical"
      ]
    }
  ]
}